version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: wokedex-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-wokedex}
      POSTGRES_USER: ${POSTGRES_USER:-wokedex}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-wokedex}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wokedex-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-wokedex} -d ${POSTGRES_DB:-wokedex}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  meilisearch:
    image: getmeili/meilisearch:v1.7.0
    container_name: wokedex-meilisearch
    environment:
      MEILI_MASTER_KEY: ${MEILISEARCH_MASTER_KEY:-your-master-key}
      MEILI_ENV: development
    ports:
      - "7700:7700"
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - wokedex-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: wokedex-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - wokedex-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  meilisearch_data:
    driver: local
  minio_data:
    driver: local

networks:
  wokedex-network:
    driver: bridge
